name: Build and Push

on:
  workflow_dispatch:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"
  schedule:
    - cron: "30 12 * * 0" # Rebuild Weekly, 12:30am picked arbitrarily

jobs:
  base: # This tier builds any os-specific containers
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: alpine
            version: "3.17"
            dockerfile: 0-alpine/3.17/Dockerfile
            context: 0-alpine/3.17
          - name: debian
            version: bullseye
            dockerfile: 0-debian/bullseye/Dockerfile
            context: 0-debian/bullseye
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.name }}
          tags: |
            type=raw,value=${{ matrix.version }}-{{date 'YYYYMMDD'}},enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
            type=raw,value=${{ matrix.version }},enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
            type=sha,prefix=${{ matrix.version }}-
            type=sha,prefix=${{ matrix.version }}-,format=long
            type=schedule,pattern=${{ matrix.version }}-{{date 'YYYYMMDD'}}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN_RW }}
      - name: Build and push
        id: build-push
        uses: docker/build-push-action@v3
        with:
          file: ${{ matrix.dockerfile }}
          context: ${{ matrix.context }}
          build-args: |
            CACHE_BUST=${{ github.run_id }}
          platforms: linux/amd64,linux/arm64
          pull: true
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.name }}:${{ matrix.version}}-buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.name }}:${{ matrix.version}}-buildcache,mode=max
  lang:
    needs:
      - base
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: amazoncorretto
            version: "19-alpine3.17"
            dockerfile: 1-amazoncorretto/alpine3.17/Dockerfile
            context: 1-amazoncorretto/alpine3.17
            version_arg: "19"
          - name: rust
            version: "1.71.0-bullseye"
            dockerfile: 1-rust/bullseye/Dockerfile
            context: 1-rust/bullseye
            version_arg: "1.71.0"
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.name }}
          tags: |
            type=raw,value=${{ matrix.version }}-{{date 'YYYYMMDD'}},enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
            type=raw,value=${{ matrix.version }},enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
            type=sha,prefix=${{ matrix.version }}-
            type=sha,prefix=${{ matrix.version }}-,format=long
            type=schedule,pattern=${{ matrix.version }}-{{date 'YYYYMMDD'}}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN_RW }}
      - name: Build and push
        id: build-push
        uses: docker/build-push-action@v3
        with:
          file: ${{ matrix.dockerfile }}
          context: ${{ matrix.context }}
          build-args: |
            VERSION=${{ matrix.version_arg }}
            CACHE_BUST=${{ github.run_id }}
          platforms: linux/amd64,linux/arm64
          pull: true
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.name }}:${{ matrix.version}}-buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.name }}:${{ matrix.version}}-buildcache,mode=max
